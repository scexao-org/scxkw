#!/usr/bin/env python
"""
Create SQLite database from FITS headers.

By default will search for the following subfolders and create a table for each
* `ocam2k`
* `vcam1`
* `vcam2`
* `vgen2`
* `kcam`
* `apapane`

These tables will all be consolidated into a single SQLite database (`.db`) file.
In addition, the tables for each subfolder will be exported as CSV files

Usage:
    scxkw-header-table (-h | --help)
    scxkw-header-table [-q] [-j NPROC] [-o DIR] INPUT

Options:
    -h, --help              Show this help message.
    -o DIR, --outdir=DIR    Specify output folder, by default will use the same folder as the input.
    -j NPROC                Use process pool with NPROC processed [default: 10]
    -q, --quiet             Silence progress bar
"""
from docopt import docopt
from pathlib import Path
from typing import List
import logging

from scxkw.tools.header_table import create_db

logger = logging.getLogger(__name__)

def find_data_subdirs(path: Path) -> List[Path]:
    """Get subdirectories for specific cameras"""
    cam_folders = ("vcam1", "vcam2", "vgen2", "ocam2k", "kcam", "apapane", "palila")
    # filter for folders whose names are in our list
    predicate = lambda p: p.is_dir() and p.name in cam_folders
    return list(filter(predicate, path.iterdir()))


def main():
    args = docopt(__doc__)
    # get input directories
    input_dir = Path(args["INPUT"]).resolve()
    logger.debug(f"Using input directory {input_dir}")
    cam_dirs = find_data_subdirs(input_dir)
    logger.debug(f"Found {len(cam_dirs)} subdirs: {', '.join(str(p) for p in cam_dirs)}")

    if args["--outdir"]:
        outdir = Path(args["--outdir"])
    else:
        outdir = input_dir
    assert outdir.is_dir(), "outdir should be a directory"
    create_db(cam_dirs, outdir=outdir, quiet=args["--quiet"], nproc=args["-j"])


if __name__ == "__main__":
    main()